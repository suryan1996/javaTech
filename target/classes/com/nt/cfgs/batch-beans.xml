<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">
	<import resource="batch-infra.xml" />
	<!-- Item Reader cfg -->
	<bean id="ffir"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="file:csv/SuperBrains.csv" />
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<!-- A tokenizer class to be used when items in input record are separated 
						by specific characters -->
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- Mapper which maps each individual items in a record to properties 
						in POJO -->
					<bean class="com.nt.mapper.ExamResultFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>	
	 <!-- Item Processor -->
	 <bean id="processor"  class="com.nt.processor.ExamResultItemProcessor"/>	 
	 <!-- ItemWriter -->
	 <bean id="seiw"   class="org.springframework.batch.item.xml.StaxEventItemWriter">
	       <property name="resource"  value="file:xml/MoreSuperBrains.xml"/>
	       <property name="rootTagName"  value="TopResults"/>
	       <property name="marshaller">
	           <bean  class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	                 <property name="classesToBeBound">
	                      <list>
	                          <value>com.nt.model.ExamResult</value>
	                      </list>
	                 </property>
	           </bean>
	       </property>
	 </bean>	 
	 <batch:job id="job1" job-repository="jobRep">
	      <batch:step id="step1" >
	           <batch:tasklet transaction-manager="txMgmr">
	                  <batch:chunk  reader="ffir"  writer="seiw"  processor="processor"  commit-interval="1"/>
	           </batch:tasklet>
	      </batch:step>
	 </batch:job>
</beans>